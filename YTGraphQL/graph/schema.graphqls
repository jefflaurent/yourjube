type Channel {
   id: ID!
   name: String!
   email: String!
   photoURL: String!
   bannerURL: String!
   subscriber: Int!
   isPremium: String!
   joinDate: Int!
   joinMonth: Int!
   joinYear: Int!
   channelDescription: String!
   isMature: String!
   twitter: String!
   facebook: String!
   instagram: String!
   validPremium: Int!
}

type Video {
  videoId: ID!
  videoTitle: String!
  videoDesc: String!
  videoURL: String!
  videoThumbnail: String!
  uploadDay: String!
  uploadMonth: String!
  uploadYear: String!
  views: Int!
  likes: Int!
  dislikes: Int!
  visibility: String!
  viewer: String!
  category: String!
  channelName: String!
  channelPhotoURL: String!
  channelEmail: String!
  time: Int!
}

type Like {
  likeId: ID!
  channelId: Int!
  channelEmail: String!
  videoId: Int!
  videoThumbnail: String!
  videoURL: String!
}

type Dislike {
  dislikeId: ID!
  channelId: Int!
  channelEmail: String!
  videoId: Int!
  videoThumbnail: String!
  videoURL: String!
}

type Comment {
  commentId: ID!
  videoId: Int!
  channelId: Int!
  channelName: String!
  channelEmail: String!
  channelPhotoURL: String!
  content: String!
  replyTo: Int!
  likes: Int!
  dislikes: Int!
  day: Int!
  month: Int!
  year: Int!
  replies: Int!
  time: Int!
}

type CommentLike {
  commentLikeId: ID!
  commentId: Int!
  channelId: Int!
  channelEmail: String!
}

type CommentDislike {
  commentDislikeId: ID!
  commentId: Int!
  channelId: Int!
  channelEmail: String!
}

type Playlist {
  playlistId: ID!
  playlistName: String!
  playlistThumbnail: String!
  playlistDescription: String!
  channelEmail: String!
  lastDate: Int!
  lastMonth: Int!
  lastYear: Int!
  videoCount: Int!
  views: Int!
  visibility: String!
}

type ChannelSubscription {
  id: ID!
  clientEmail: String!
  channelId: Int!
  channelName: String!
  channelEmail: String!
  channelPhotoURL: String!
}

type PlaylistVideo {
  id: ID!
  playlistId: Int!
  videoId: Int!
  videoName: String!
  videoThumbnail: String!
  videoURL: String!
  channelName: String!
  channelEmail: String!
  time: Int!
  place: Int!
}

type Post {
  id: ID!
  channelId: Int!
  content: String!
  photoURL: String!
  likes: Int!
  dislikes: Int!
  time: Int!
}

type PostLike {
  id: ID!
  channelId: Int!
  postId: Int!
}

type PostDislike {
  id: ID!
  channelId: Int!
  postId: Int!
}

type Bell {
  id: ID!
  clientId: Int!
  channelId: Int!
}

type Notification {
  id: ID!
  channelId: Int!
  route: Int!
  photoURL: String!
  content: String!
  type: String!
  time: Int!
}

type PremiumAccount {
  id: ID!
  channelId: Int!
  startDate: Int!
  startMonth: Int!
  startYear: Int!
  endDate: Int!
  endMonth: Int!
  endYear: Int!
}

type Premium {
  id: ID!
  channelId: Int!
  startDate: Int!
  startMonth: Int!
  startYear: Int!
  endDate: Int!
  endMonth: Int!
  endYear: Int!
}

input newVideo {
  videoTitle: String!
  videoDesc: String!
  videoURL: String!
  videoThumbnail: String!
  uploadDay: String!
  uploadMonth: String!
  uploadYear: String!
  views: Int!
  likes: Int!
  dislikes: Int!
  visibility: String!
  viewer: String!
  category: String!
  channelName: String!
  channelPhotoURL: String!
  channelEmail: String!
  time: Int!
}

input newChannel {
  name: String!
   email: String!
   photoURL: String!
   bannerURL: String!
   subscriber: Int!
   isPremium: String!
   joinDate: Int!
   joinMonth: Int!
   joinYear: Int!
   channelDescription: String!
   isMature: String!
   twitter: String!
   facebook: String!
   instagram: String!
   validPremium: Int!
}

input newLike {
  channelId: Int!
  channelEmail: String!
  videoId: Int!
  videoThumbnail: String!
  videoURL: String!
}

input newDislike {
  channelId: Int!
  channelEmail: String!
  videoId: Int!
  videoThumbnail: String!
  videoURL: String!
}

input newCommentLike {
  commentId: Int!
  channelId: Int!
  channelEmail: String!
}

input newCommentDislike {
  commentId: Int!
  channelId: Int!
  channelEmail: String!
}

input newComment {
  videoId: Int!
  channelId: Int!
  channelName: String!
  channelEmail: String!
  channelPhotoURL: String!
  content: String!
  replyTo: Int!
  likes: Int!
  dislikes: Int!
  day: Int!
  month: Int!
  year: Int!
  replies: Int!
  time: Int!
}

input newPlaylist {
  playlistName: String!
  playlistThumbnail: String!
  playlistDescription: String!
  channelEmail: String!
  lastDate: Int!
  lastMonth: Int!
  lastYear: Int!
  videoCount: Int!
  views: Int!
  visibility: String!
}

input newPlaylistVideo {
  playlistId: Int!
  videoId: Int!
  videoName: String!
  videoThumbnail: String!
  videoURL: String!
  channelName: String!
  channelEmail: String!
  time: Int!
  place: Int!
}

input newSubscription {
  clientEmail: String!
  channelId: Int!
  channelName: String!
  channelEmail: String!
  channelPhotoURL: String!
}

input newPost {
  channelId: Int!
  content: String!
  photoURL: String!
  likes: Int!
  dislikes: Int!
  time: Int!
}

input newPostLike {
  channelId: Int!
  postId: Int!
}

input newPostDislike {
  channelId: Int!
  postId: Int!
}

input newBell {
  clientId: Int!
  channelId: Int!
}

input newNotification {
  channelId: Int!
  route: Int!
  photoURL: String!
  content: String!
  type: String!
  time: Int!
}

input newPremium {
  channelId: Int!
  startDate: Int!
  startMonth: Int!
  startYear: Int!
  endDate: Int!
  endMonth: Int!
  endYear: Int!
}

input newPremiumAccount {
  channelId: Int!
  startDate: Int!
  startMonth: Int!
  startYear: Int!
  endDate: Int!
  endMonth: Int!
  endYear: Int!
}

type Query {
  premiumAccounts: [PremiumAccount!]!
  premiums: [Premium!]!
  notifications: [Notification!]!
  bells: [Bell!]!
  posts: [Post!]!
  postLikes: [PostLike!]!
  postDislikes: [PostDislike!]!
  subscriptions: [ChannelSubscription!]!
  channels: [Channel!]!
  videos: [Video!]!
  publicVideos: [Video!]!
  likes: [Like!]!
  comments(videoId: Int!): [Comment!]!
  allPlaylists: [Playlist!]!
  playlists(channelEmail: String!): [Playlist!]!
  playlistVideos(channelEmail: String!): [PlaylistVideo!]!
  playlistVideosById(playlistId: Int!): [PlaylistVideo!]!

  findPremiumAccount(channelId: Int!): [PremiumAccount!]!
  findPremium(channelId: Int!): [Premium!]!
  findVideo(videoId: ID!): [Video!]!
  findLike(email: String!, videoId: Int!): [Like!]!
  findDislike(email: String!, videoId: Int!): [Dislike!]!
  findChannel(email: String!): [Channel!]!
  findReply(replyTo: Int!): [Comment!]!
  findCommentLike(channelEmail: String!, commentId: Int!): [CommentLike!]!
  findCommentDislike(channelEmail: String!, commentId: Int!): [CommentDislike!]!
  findVideoPlaylist(playlistId: Int!, videoId: Int!): [PlaylistVideo!]!
  searchVideo(videoTitle: String!): [Video!]!
  searchChannel(channelName: String!): [Channel!]!
  searchPlaylist(playlistName: String!): [Playlist!]!
}

type Mutation {
  createChannel(input: newChannel): Channel!
  changeDescription(id: ID!, channelDescription: String!): Boolean!
  changeTwitter(id: ID!, twitter: String!): Boolean!
  changeFacebook(id: ID!, facebook: String!): Boolean!
  changeInstagram(id: ID!, instagram: String!): Boolean!
  changeIcon(id: ID!, photoURL: String!): Boolean!
  changeBanner(id: ID!, bannerURL: String!): Boolean!
  changePremium(id: ID!, isPremium: String!): Boolean!
  validPremium(id: ID!, validPremium: Int!): Boolean!
  
  changeVideoVisibility(videoId: ID!, visibility: String!): Boolean!
  changeVideoDescription(videoId: ID!, videoDesc: String!): Boolean!
  changeVideoTitle(videoId: ID!, videoTitle: String!): Boolean!
  changeVideoThumbnail(videoId: ID!, videoThumbnail: String!): Boolean!
  deleteVideo(videoId: ID!): Boolean!
  createVideo(input: newVideo): Video!
  watchVideo(videoId: ID!): Boolean!
  likeVideo(videoId: ID!): Boolean!
  dislikeVideo(videoId: ID!): Boolean!
  addLike(input: newLike): Like!
  addDislike(input: newDislike): Dislike!
  removeLike(channelId: Int!, videoId: Int!): Boolean!
  removeDislike(channelId: Int!, videoId: Int!): Boolean!
  decreaseLike(videoId: ID!): Boolean!
  decreaseDislike(videoId: ID!): Boolean!
  
  addComment(input: newComment): Comment!
  addReplyCount(commentId: ID!): Boolean!
  increaseCommentLike(commentId: ID!): Boolean!
  decreaseCommentLike(commentId: ID!): Boolean!
  increaseCommentDislike(commentId: ID!): Boolean!
  decreaseCommentDislike(commentId: ID!): Boolean!
  registerCommentLike(input: newCommentLike): CommentLike!
  registerCommentDislike(input: newCommentDislike): CommentDislike!
  removeCommentLike(commentId: Int!, channelEmail: String!): Boolean!
  removeCommentDislike(commentId: Int!, channelEmail: String!): Boolean!
  
  createPlaylist(input: newPlaylist): Playlist!
  addPlaylist(input: newPlaylistVideo): PlaylistVideo!
  removePlaylistVideo(playlistId: Int!, videoId: Int!): Boolean!
  changePlaylistName(playlistId: ID!, playlistName: String!): Boolean!
  changePlaylistDesc(playlistId: ID!, playlistDescription: String!): Boolean!
  changePlaylistVisibility(playlistId: ID!, visibility: String!): Boolean!
  updatePlaylistUpdate(playlistId: ID!, lastDate: Int!, lastMonth: Int!, lastYear: Int!): Boolean!
  addVideoCount(playlistId: ID!): Boolean!
  decreaseVideoCount(playlistId: ID!): Boolean!
  clearPlaylist(playlistId: Int!): Boolean!
  updateThumbnail(playlistId: Int!, playlistThumbnail: String!): Boolean!
  updatePlaylistPlace(playlistId: Int!, videoId: Int!, place: Int!): Boolean!

  addSubscription(input: newSubscription): ChannelSubscription!
  removeSubscription(clientEmail: String!, channelEmail: String!): Boolean!
  increaseSubscriber(id: ID!): Boolean!
  decreaseSubscriber(id: ID!): Boolean!

  addPost(input: newPost): Post!
  increasePostLike(id: ID!): Boolean!
  decreasePostLike(id: ID!): Boolean!
  increasePostDislike(id: ID!): Boolean!
  decreasePostDislike(id: ID!): Boolean!
  registerPostLike(input: newPostLike): Boolean!
  removePostLike(postId: Int!, channelId: Int!): Boolean!
  registerPostDislike(input: newPostDislike): Boolean!
  removePostDislike(postId: Int!, channelId: Int!): Boolean!

  addBell(input: newBell): Bell!
  deleteBell(clientId: Int!, channelId: Int!): Boolean!
  addNotification(input: newNotification): Notification!

  addPremium(input: newPremium): Boolean!
  addPremiumAccount(input: newPremiumAccount): Boolean!
}